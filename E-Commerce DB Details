-- SQL Project: Sample Database Creation and Queries

-- 1. Create Database
CREATE DATABASE ECommerceDB;

-- 2. Use Database
db name ECommerceDB

-- 3. Create Tables
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    UserName VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Products (
    ProductID INT PRIMARY KEY AUTO_INCREMENT,
    ProductName VARCHAR(100) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    Stock INT DEFAULT 0
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    OrderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY AUTO_INCREMENT,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Price DECIMAL(10, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- 4. Insert Sample Data
INSERT INTO Users (UserName, Email) VALUES
('ANTIM PANDEY', 'achyupanday1213@gmail.com'),
('SHREYASH', 'shreyashh@gmail.com');

INSERT INTO Products (ProductName, Price, Stock) VALUES
('Laptop', 800.00, 10),
('Smartphone', 500.00, 20),
('Headphones', 50.00, 50);

INSERT INTO Orders (UserID, TotalAmount) VALUES
(1, 850.00),
(2, 550.00);

INSERT INTO OrderDetails (OrderID, ProductID, Quantity, Price) VALUES
(1, 1, 1, 800.00),
(1, 3, 1, 50.00),
(2, 2, 1, 500.00),
(2, 3, 1, 50.00);

-- 5. Queries
-- Get all users
SELECT * FROM Users;

-- Get all products
SELECT * FROM Products;

-- Get all orders with user details
SELECT o.OrderID, u.UserName, o.OrderDate, o.TotalAmount
FROM Orders o
JOIN Users u ON o.UserID = u.UserID;

-- Get order details with product information
SELECT od.OrderDetailID, o.OrderID, p.ProductName, od.Quantity, od.Price
FROM OrderDetails od
JOIN Orders o ON od.OrderID = o.OrderID
JOIN Products p ON od.ProductID = p.ProductID;

-- Update stock after an order
UPDATE Products
SET Stock = Stock - 1
WHERE ProductID = 1;

-- Delete a user (and cascade delete orders)
DELETE FROM Users WHERE UserID = 2;
